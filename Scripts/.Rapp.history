ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )
ts_mean
ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )
ts_true
ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )
ts_true
hist ( ts_true , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop  ) , add = T , col = "red")
mean ( ts_true)
mean ( ts_mean)
new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))
ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )
mean ( ts_mean)
mean ( var_mean)
mean ( ts_true)
var ( ts_true)
var ( var_mean)
var ( ts_mean)
var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )
var_true
mean ( var_true)
var ( var_true)
Q
MakeVar ( 0.5 , 10000 , 0.01 , 2 )
Q
MakeVar <- function ( p , n_rep , Fst , n_pop ) {#
	#recover()#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
}#
MakeVar ( 0.5 , 10000 , 0.01 , 2 )
ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )
hist ( ts_mean , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")
var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )
hist ( var_mean , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")
ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )
hist ( ts_true , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop  ) , add = T , col = "red")
var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )
hist ( var_mean , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")
var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )
hist ( var_mean , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop  ) , add = T , col = "red")
par ( mfrow = c ( 1 ,2 ))
hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )
par ( mfrow = c ( 1 ,1 ))
var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )
hist ( var_true , breaks = 50 , freq = F )
curve ( dchisq ( x , n_pop  ) , add = T , col = "red")
rand = T
if ( rand ) p <- runif ( n_rep )
p
new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )
p
p <- runif ( n_rep )
p
p <- runif ( n_rep )
p
n_loc = 100
p <- runif ( n_loc * n_rep )
length(p)
p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_pop )
p
dim(p)
p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )
dim(p)
p[,1]
p[,1] * diag ( 100 )
p[,1] * (1-p[,1] )* diag ( 100 )
apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , x  , sigma = Fst * x * ( 1 - x ) * diag ( n_pop ) ) )
apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , x  , sigma = Fst * x * ( 1 - x ) * diag ( n_pop ) ) )
x
x
rmvnorm ( 1 , 0  , sigma = Fst * x * ( 1 - x ) * diag ( n_pop ) ) )
rmvnorm ( 1 , 0  , sigma = Fst * x * ( 1 - x ) * diag ( n_pop ) )
n_loc
rmvnorm ( 1 , 0  , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) )
rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) )
new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )
dim(new_ps)
head(new_ps)
new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)
new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)
vars_t <- apply ( new_ps , 2 , function ( x ) sum ( x * ( 1 - x ) ) )
vars_t
colSums ( new_ps * ( 1 - new_ps ) )
vars_t <- colSums ( new_ps * ( 1 - new_ps ) )
p * ( 1 - p )
colSums ( p * ( 1 - p ) )
vars_t
vars_0 <- colSums ( p * ( 1 - p ) )
vars_0 - vars_t
Fst * vars_0
( vars_0 - vars_t ) / ( Fst * vars_0 )
vars_start <- colSums ( p * ( 1 - p ) )
Q
MakeVar ( 0.25 , 10000 , 0.01 , 2 , T , 100 )
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	recover()#
	if ( rand ) {#
		p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		( vars_start - vars_t ) / ( Fst * vars_start )#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 100 )
p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )
p
n_rep
new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )
new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)
new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)
vars_t <- colSums ( new_ps * ( 1 - new_ps ) )
vars_t
vars_start <- colSums ( p * ( 1 - p ) )
vars_start
( vars_start - vars_t ) / ( Fst * vars_start )
my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )
hist ( my.stat , breaks = 50 , freq = F)
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 100 )
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
Q
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 50 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
dt
Q
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 50 )
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 100 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
mean ( my.stat )
var ( my.stat )
Q
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 10 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		#p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 10 )
new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )
new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		#p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 100 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		#p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 1000 )
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 200 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")
sd ( my.stat)
curve ( dnorm ( x , 1, 0.83) , add = T , col = "red")
qqplot ( my.stat , dnorm ( x , 1, 0.83))
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		#p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , 1, 1.1) , add = T , col = "red")#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 300 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
p
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		p <- matrix ( rnorm ( n_loc * n_rep , p , 0.01 )	, nrow = n_loc , ncol = n_rep )#
		#p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
		recover()	#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 100 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
mean ( my.stat )
var ( my.stat )
sd ( my.stat )
p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( rnorm ( n_loc * n_rep , p , 0.01 )	, nrow = n_loc , ncol = n_rep )#
		#p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )
warnings()
p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )
new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )
new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)
new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)
vars_t <- colSums ( new_ps * ( 1 - new_ps ) )
vars_start <- colSums ( p * ( 1 - p ) )
vars_start
vars_t
vars_start
my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
p
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
vars_start - vars_t
hist ( vars_start - vars_t , breaks = 50 , freq = F )
Q
MakeVar ( 0.25 , 10000 , 0.01 , 2 , rand = T , n_loc = 10 )
n_loc
Q
MakeVar <- function ( p , n_rep , Fst , n_pop , rand , n_loc ) {#
	if ( rand ) {#
		#p <- matrix ( runif ( n_loc * n_rep )	, nrow = n_loc , ncol = n_rep )#
		#p <- matrix ( rnorm ( n_loc * n_rep , p , 0.01 )	, nrow = n_loc , ncol = n_rep )#
		p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )#
		hist ( my.stat , breaks = 50 , freq = F)#
		curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")#
		recover()	#
#
		mean ( my.stat )#
		var ( my.stat )#
		sd ( my.stat )#
	} else {#
	new_ps <- p + rmvnorm ( n_rep , sigma = Fst * p * ( 1 - p ) * diag ( n_pop ) )#
	new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
	new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
	}#
	p_bars <- rowMeans ( new_ps )#
	par ( mfrow = c ( 2,2))#
	recover()#
	#####
	ts_mean <- (n_pop - 1 ) * ( p_bars * ( 1 - p_bars ) - rowMeans ( new_ps * ( 1 - new_ps ) ) ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( ts_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	var_mean <- rowSums ( ( new_ps- p_bars )^2 ) / ( Fst * p_bars * ( 1 - p_bars ) )#
	hist ( var_mean , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop - 1  ) , add = T , col = "red")#
	#####
	ts_true <- (n_pop ) * ( p * ( 1 - p ) - rowMeans ( new_ps * ( 1 - new_ps ) ) )  / ( Fst * ( p * ( 1 - p ) ) )#
	hist ( ts_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	#####
	var_true <- rowSums ( ( new_ps- p )^2 ) / ( Fst * p * ( 1 - p ) )#
	hist ( var_true , breaks = 50 , freq = F )#
	curve ( dchisq ( x , n_pop  ) , add = T , col = "red")#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
	hist ( ts_true , breaks = 50 , freq = F , col = rgb ( 1 , 0 , 0 , 0.4 ) )#
#
}#
MakeVar ( 0.5 , 10000 , 0.01 , 2 , rand = T , n_loc = 10 )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
p=0.45
p <- matrix ( p	, nrow = n_loc , ncol = n_rep )#
		new_ps <- apply ( p , 2 , function ( x ) x + rmvnorm ( 1 , sigma = Fst * x * ( 1 - x ) * diag ( n_loc ) ) )#
		new_ps <- ifelse ( new_ps < 0 , 0 , new_ps)#
		new_ps <- ifelse ( new_ps > 1 , 1 , new_ps)#
		vars_t <- colSums ( new_ps * ( 1 - new_ps ) )#
		vars_start <- colSums ( p * ( 1 - p ) )#
		my.stat <- ( vars_start - vars_t ) / ( Fst * vars_start )
hist ( my.stat , breaks = 50 , freq = F)
curve ( dnorm ( x , mean ( my.stat ), sd ( my.stat )) , add = T , col = "red")
p <- numeric ( n_loc * n_rep )
p
tmp <- runif ( )
tmp <- runif ( 1 )
tmp
blah <- integrate( function ( x ) 1/ x  , 0 , 1 )
blah <- integrate( function ( x ) 1/ x  , 0.00001 , 1 )
blah
integrate( function ( x ) 1/ x  , 0.000001 , 1 )
integrate( function ( x ) 1/ x  , 0.0000001 , 1 )
integrate( function ( x ) 1/ x  , 0.00000001 , 1 )
1/20000
integrate( function ( x ) 1/ x  , 1/20000 , 19999/20000 )
tmp <- runif ( 1 )
tmp
denom <- integrate( function ( x ) 1/ x  , 1/20000 , 19999/20000 )
1/tmp
(1/tmp)/denom
denom
names(denom)
denom$value
(1/tmp)/denom$value
n_rep
tmp
p <- numeric ( n_loc * n_rep )
i = 1 #
		while ( i <= n_loc * n_rep ) {#
			tmp <- runif ( 1 )#
			denom <- integrate( function ( x ) 1/ x  , 1/20000 , 19999/20000 )#
			if ( runif ( 1 ) < (1/tmp)/denom$value ) {#
				p [ i ] <- tmp#
				i <- i + 1#
			} else {#
				next#
			}#
		}
p
hist ( p , breaks = 500 , freq = F)
hist ( p , breaks = 50 , freq = F)
tmp =0.0001
denom
denom <- integrate( function ( x ) 1/ x  , 1/20000 , 19999/20000 )
denom
1/tmp
(1/tmp)/denom$value
tmp
tmp = 0.0000001
tmp < 1/20000
p <- numeric ( n_loc * n_rep )#
		i = 1 #
		while ( i <= n_loc * n_rep ) {#
			tmp <- runif ( 1 )#
			if ( tmp < 1/20000 | tmp > ( 1 - 1/20000 ) ) next#
			denom <- integrate( function ( x ) 1/ x  , 1/20000 , 19999/20000 )#
			if ( runif ( 1 ) < (1/tmp)/denom$value ) {#
				p [ i ] <- tmp#
				i <- i + 1#
			} else {#
				next#
			}#
		}
p
hist ( p , breaks = 50)
denom <- integrate( function ( x ) 1/ x  , 0.00000000000000001 , 1 )
denom
p <- numeric ( n_loc * n_rep )#
		i = 1 #
		denom <- integrate( function ( x ) 1/ x  , 0.00000000000000001 , 1 )#
		while ( i <= n_loc * n_rep ) {#
			tmp <- runif ( 1 )#
			if ( tmp < 1/20000 | tmp > ( 1 - 1/20000 ) ) next#
			if ( runif ( 1 ) < (1/tmp)/denom$value ) {#
				p [ i ] <- tmp#
				i <- i + 1#
			} else {#
				next#
			}#
		}
p
